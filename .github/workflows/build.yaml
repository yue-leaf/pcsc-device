name: Build and Push Multi-Arch Docker Image (Separate Jobs)

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

env:
  DOCKERHUB_USERNAME: YOUR_DOCKERHUB_USERNAME
  IMAGE_NAME: pcsc-device-hsm
  GO_VERSION: 1.25.1

jobs:
  build_amd64:
    name: Build on AMD64
    runs-on: ubuntu-latest  # 使用默认的 AMD64 runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push AMD64 image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-amd64
          build-args: |
            GO_VERSION=${{ env.GO_VERSION }}
            TARGETARCH=amd64

  build_arm64:
    name: Build on ARM64
    runs-on: [ubuntu-latest, arm64] # 或者使用 self-hosted runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push ARM64 image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/arm64
          tags: ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-arm64
          build-args: |
            GO_VERSION=${{ env.GO_VERSION }}
            TARGETARCH=arm64

  create_manifest:
    name: Create Multi-Arch Manifest
    runs-on: ubuntu-latest
    needs: [build_amd64, build_arm64] # 确保在两个构建任务都完成后执行

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and push manifest
        run: |
          # 定义基础镜像名和两个架构的标签
          IMAGE_BASE=${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          TAG=${{ github.sha }}

          # 使用 docker manifest 创建并推送 multi-arch manifest
          docker manifest create ${IMAGE_BASE}:latest ${IMAGE_BASE}:${TAG}-amd64 ${IMAGE_BASE}:${TAG}-arm64
          docker manifest push ${IMAGE_BASE}:latest
          docker manifest create ${IMAGE_BASE}:${TAG} ${IMAGE_BASE}:${TAG}-amd64 ${IMAGE_BASE}:${TAG}-arm64
          docker manifest push ${IMAGE_BASE}:${TAG}

          # 查看 manifest 结果
          docker manifest inspect ${IMAGE_BASE}:latest