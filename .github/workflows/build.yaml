name: Build and Push Multi-Arch Image (Build Outside Dockerfile)

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*.*.*"

env:
  IMAGE_NAME: pcsc-device
  GO_VERSION: 1.23.12

jobs:
  build_amd64:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install build deps
        run: sudo apt-get update && sudo apt-get install -y \
          libpcsclite-dev libusb-1.0-0-dev pkg-config make

      - name: Build binary (amd64)
        run: |
          GOOS=linux GOARCH=amd64 CGO_ENABLED=1 \
            go build -ldflags '-extldflags "-Wl,--verbose -L/usr/lib -L/usr/local/lib -lpcsclite"' \
            -o pcsc-device-hsm ./cmd/pcsc-device-hsm

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: pcsc-device-hsm-amd64
          path: pcsc-device-hsm

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push AMD64 image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-amd64 .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-amd64

  build_arm64:
    runs-on: ubuntu-22.04-arm
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install build deps
        run: sudo add-apt-repository universe && \
          sudo apt-get update && sudo apt-get install -y \
          libpcsclite-dev libusb-1.0-0-dev pkg-config make

      - name: Build binary (arm64)
        run: |
          GOOS=linux GOARCH=arm64 CGO_ENABLED=1 \
            go build -ldflags '-extldflags "-Wl,--verbose -L/usr/lib -L/usr/local/lib -lpcsclite"' \
            -o pcsc-device-hsm ./cmd/pcsc-device-hsm

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: pcsc-device-hsm-arm64
          path: pcsc-device-hsm

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push ARM64 image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-arm64 .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-arm64

  create_manifest:
    runs-on: ubuntu-22.04
    needs: [build_amd64, build_arm64]
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and push manifest
        run: |
          IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          TAG=${{ github.sha }}

          docker manifest create $IMAGE:latest \
            $IMAGE:${TAG}-amd64 \
            $IMAGE:${TAG}-arm64

          docker manifest push $IMAGE:latest

          docker manifest create $IMAGE:${TAG} \
            $IMAGE:${TAG}-amd64 \
            $IMAGE:${TAG}-arm64

          docker manifest push $IMAGE:${TAG}
